@model Mandarin.Data.Models.Product

@{
    ViewData["Title"] = "Update";
}

<h1>Update</h1>

<h4>Product</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Update">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" cols="40" class="form-control" rows="5"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
          @*<div class="form-group">
                @Html.LabelFor(model => model.Category)
                <div class="col-sm-6">
                    @Html.DropDownListFor(model => model.CategoryId, Model.CategoriesList)
                </div>
            </div>*@

            <div class="form-group">
                <label asp-for="Image" class="control-label"></label>
                <input id="file-upload" type="file">
                <span asp-validation-for="Image" class="text-danger"></span>
            </div>
            <div class="buttons-class" style="margin-top:20px;">
                <input type="submit" value="Save"/>
                <a asp-action="Details" asp-route-id="@Model.Id">Go Back</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}


@* UPLOADING MULTIPLE IMAGES
    for (let i = 0; i < files.length; i++) {
        let file = files[i];
        formData.append("file", file);
        formData.append("api_key", signData.apikey);
        formData.append("timestamp", signData.timestamp);
        formData.append("signature", signData.signature);
        formData.append("eager", "c_pad,h_300,w_400|c_crop,h_200,w_260");
        formData.append("folder", "signed_upload_demo_form");

        fetch(url, {
            method: "POST",
            body: formData
        })
        .then((response) => {
            return response.text();
        })
        .then((data) => {
            console.log(JSON.parse(data))
            var str = JSON.stringify(JSON.parse(data), null, 4);
            document.getElementById("formdata").innerHTML += str;
        });
    }
*@